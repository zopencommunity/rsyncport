# bump: rsync-version /RSYNC_VERSION="(.*)"/ https://github.com/WayneD/rsync.git|semver:*
RSYNC_VERSION="3.2.7"

export ZOPEN_BUILD_LINE="DEV"
export ZOPEN_CATEGORIES="utilities"
# export ZOPEN_STABLE_URL="https://github.com/WayneD/rsync/archive/refs/tags/v${RSYNC_VERSION}.tar.gz"
# export ZOPEN_STABLE_DEPS="curl gzip m4 perl make autoconf automake zoslib"
export ZOPEN_DEV_URL="https://github.com/WayneD/rsync.git"
export ZOPEN_DEV_DEPS="git curl gzip m4 perl make autoconf automake gawk openssl xxhash zstd lz4 zoslib python"

#
# For GIT, it needs Python set up and also requires commonmark installed, e.g.
# python3 -mpip install --user commonmark
# For TARBALL, temporary hack - the tarball name does not match the directory - create a sym link to help zopen-build out
#
if [ "${ZOPEN_BUILD_LINE}" = "DEV" ]; then
  export ZOPEN_BOOTSTRAP=skip
  RSYNC_INC="${ZOPEN_ROOT}/rsync"
else
 	rm "v${RSYNC_VERSION}"
 	ln -s "rsync-${RSYNC_VERSION}" "v${RSYNC_VERSION}"
   RSYNC_INC="${ZOPEN_ROOT}/v${RSYNC_VERSION}"

fi

# Requires commonmark

zopen_init()
{
  if [ "${ZOPEN_BUILD_LINE}" = "DEV" ]; then
    if ! type python3 >/dev/null ; then
      printError "need python3 with commonmark package set up for build of rsync"
    fi
    python3 -m venv rsync_python
    . ./rsync_python/bin/activate
    pip3 install commonmark
  fi
}

zopen_terminate()
{
  deactivate
}

# 
# Should be able to add zlib here and popt (once popt is ported)
#
export ZOPEN_EXTRA_CONFIGURE_OPTS='--with-included-zlib=no'
export LIBS="-lxxhash -lssl -lzstd -llz4 -lcrypto -lz"
export ZOPEN_EXTRA_CPPFLAGS="-I\${RSYNC_INC} -I./popt -I\${ZOPEN_ROOT}/patches/PR3 -I\${OPENSSL_HOME}/include -I\${XXHASH_HOME}/include -I\${ZSTD_HOME}/include -I\${LZ4_HOME}/include -I\${ZLIB_HOME}/include"
export ZOPEN_EXTRA_LDFLAGS="-L\${OPENSSL_HOME}/lib -L\${XXHASH_HOME}/lib -L\${ZSTD_HOME}/lib  -L\${LZ4_HOME}/lib -L\${ZLIB_HOME}/lib"
export PERL="/bin/env perl"

zopen_get_version()
{
  ./rsync --version | head -1 | awk '{print $3; }'
}

zopen_check_results()
{
#
# Results should be an overall result no more than 17
#
chk="$1/$2_check.log"

failures=$(grep 'overall result is' ${chk} | awk ' { print $4; }')
expectedFailures=7
totalTests=44

echo "actualFailures:${failures}"
echo "expectedFailures:${expectedFailures}"
echo "totalTests:${totalTests}"
}
